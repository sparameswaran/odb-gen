---
name: {{tile['short_name']}}-on-demand
product_version: '{{context['version']}}' # FIX ME
minimum_version_for_upgrade: 0.0.0.0
label: {{tile['label']}}
rank: 50
metadata_version: '1.8'
serial: true
service_broker: true # Imp to generate uaa client creds
icon_image: {{ base64(tile['icon_file']) }}# BASE 64 Encoded IMAGE GOES HERE #

releases:
- name: {{ odb_release['name'] }}
  file: {{ odb_release['release_file']}}
  version: '{{odb_release['version']}}'
- name: {{product['short_name']}}-service-adapter-release
  file: {{product['short_name']}}-service-adapter-release-{{context['version']}}.tgz
  version: '{{context['version']}}' # FIX ME
{% for managed_service_release in context['managed_service_releases'] %}
- name: {{managed_service_release['name']}}
  file: {{managed_service_release['release_file']}}
  version: '{{managed_service_release['version']}}'
{% endfor %}  

stemcell_criteria:
  os: {{ context['stemcell']['name'] or 'ubuntu-trusty' }}
  version: '{{ context['stemcell']['version'] or 3146.5 }}'
  enable_patch_security_updates: true

post_deploy_errands:
- name: register_on_demand_service_broker

pre_delete_errands:
- name: delete_subdeployments_on_demand_service_broker
- name: unregister_on_demand_service_broker

property_blueprints:
- name: encryption_key
  type: secret
- name: broker_basic_auth
  type: simple_credentials

{% for plan in service['service_plans'] %}
- name: {{ plan['nameInGo']}}_az_multi_select
  type: service_network_az_multi_select
  configurable: true
  optional: false
  {% for vm in plan['vms'] %}
- name: {{ plan['nameInGo']}}_{{vm['nameInGo']}}_vm_type
  type: vm_type_dropdown
  optional: true
  configurable: true
- name: {{ plan['nameInGo']}}_{{vm['nameInGo']}}_disk_type
  type: disk_type_dropdown
  configurable: true
  optional: true
- name: {{ plan['nameInGo']}}_{{vm['nameInGo']}}_instance_count
  type: integer
  configurable: true
  default: {{ vm['instances']}}
{% endfor %}

{% endfor %}

form_types:
{% for plan in service['service_plans'] %}
- name: {{product['short_name']}}_{{ plan.name}}_ops_form
  label: {{product['title']}} On-Demand Plan {{ plan.title}} 
  description: Configure {{product['title']}} On-Demand Plan {{ plan.title}} Configuration
  property_inputs:

  {% for vm in plan['vms'] %}
  - reference: .properties.{{ plan['name']}}_{{vm['nameInGo']}}_vm_type
    label: VM type for {{vm['name']}} in Plan {{ plan.title}}
    description: 'Select the vm type for {{vm['name']}} in Plan {{ plan.title}}'
  - reference: .properties.{{ plan['name']}}_{{vm['nameInGo']}}_disk_type
    label: Disk type for {{vm['name']}} in Plan {{ plan.title}}
    description: 'Select the disk type for {{vm['name']}} in Plan {{ plan.title}}'
  - reference: .properties.{{ plan['name']}}_{{vm['nameInGo']}}_instance_count
    label: {{vm['name']}} instances in Plan {{ plan.title}}
    description: 'Count of instances for {{vm['name']}} in Plan {{ plan.title}}'
    {% endfor %}
  - reference: .properties.{{ plan.name}}_az_multi_select
    label: Availability zone(s) for Plan '{{ plan.title}}' 
    description: 'Select one or more availability zones for Plan {{ plan.name}}'

{% endfor %}

job_types:
- name: broker
  resource_label: {{product['short_name']}}-ODB
  templates:
  - name: broker
    release: on-demand-service-broker
    manifest: |
      port: 8080
      username: (( .properties.broker_basic_auth.identity ))
      password: (( .properties.broker_basic_auth.password ))
      disable_ssl_cert_verification: true
      bosh:
        url: https://(( $director.deployment_ip )):25555
        root_ca_cert: (( $director.ca_public_key ))
        authentication:
          uaa:
            url: https://(( $director.deployment_ip )):8443
            client_id: (( $self.uaa_client_name ))
            client_secret: (( $self.uaa_client_secret ))
      cf:
        url: https://api.(( ..cf.cloud_controller.system_domain.value ))
        authentication:
          url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
          user_credentials:
            username: (( ..cf.uaa.system_services_credentials.identity ))
            password: (( ..cf.uaa.system_services_credentials.password ))

      service_adapter:
        path: /var/vcap/packages/odb-service-adapter/bin/service-adapter
      service_deployment:
        releases:
        {% for managed_service_release in context['managed_service_releases'] %}
        - name: {{managed_service_release['name']}}
          jobs: {{managed_service_release['jobs']}}
        {% endfor %}  
        stemcell:
          os: ubuntu-trusty
          version: latest

      service_catalog:
        id: {{ service['id']}}
        service_name: {{product['short_name']}}-on-demand
        service_description: {{product['description']}}
        bindable: true
        plan_updatable: true
        tags: [{{ product['short_name']}}]
        plans:
        {% for plan in service['service_plans'] %}
          - name: {{ plan['name']}}
            plan_id: {{ plan['id']}}
            description: {{ plan['description']}}
            properties: 
              cf:
                disable_ssl_cert_verification: true
                domain: "(( ..cf.cloud_controller.system_domain.value ))"
                api_url: https://api.(( ..cf.cloud_controller.system_domain.value ))
                app_domains:
                  - (( ..cf.cloud_controller.apps_domain.value ))
                admin_username: (( ..cf.uaa.system_services_credentials.identity ))
                admin_password: (( ..cf.uaa.system_services_credentials.password ))
                nats:
                  host: (( ..cf.nats.first_ip ))
                  port: 4222
                  username: (( ..cf.nats.credentials.identity ))
                  password: (( ..cf.nats.credentials.password ))

            instance_groups:
            {% for vm in plan['vms'] %}
            - name: {{ vm['name'] }}
              vm_type: (( .properties.{{ plan['nameInGo']}}_{{vm['nameInGo']}}_vm_type.value ))
              instances: (( .properties.{{ plan['nameInGo']}}_{{vm['nameInGo']}}_instance_count.value ))
              persistent_disk: (( .properties.{{ plan['nameInGo']}}_{{vm['nameInGo']}}_disk_type.value ))
              azs: (( .properties.{{ plan['nameInGo']}}_az_multi_select.value ))
              networks: [(( $self.service_network ))]
              properties: {{ vm.properties }}
              
            {% endfor %}
              
          {% endfor %}


  - name: {{ product['name'] }}
    release: {{product['short_name']}}-service-adapter-release

  property_blueprints:
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: true
    default: 1
    constraints:
      max: 1


  resource_definitions:
  - name: ram
    type: integer
    configurable: true
    default: 1024
  - name: ephemeral_disk
    type: integer
    configurable: true
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: true
    default: 1024
    constraints:
      min: 1024
  - name: cpu
    type: integer
    configurable: true
    default: 1

- name: register_on_demand_service_broker
  resource_label: On Demand Service Broker Registrar
  single_az_only: true
  templates:
  - name: register-broker
    release: {{ odb_release['name'] }}
    manifest: |
      broker_name: {{product['short_name']}}-odb
      disable_ssl_cert_verification: true
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definition:
    name: instances
    type: integer
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

- name: upgrade-sub-deployments
  resource_label: Upgrade Sub-deployments
  single_az_only: true
  templates:
  - name: upgrade-sub-deployments
    release: {{ odb_release['name'] }}
    
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definition:
    name: instances
    type: integer
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

- name: unregister_on_demand_service_broker
  resource_label: On Demand Service Broker Deregistrar
  single_az_only: true
  templates:
  - name: deregister-broker
    release: {{ odb_release['name'] }}
    manifest: |
      broker_name: {{product['short_name']}}-odb
      disable_ssl_cert_verification: true
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definition:
    name: instances
    type: integer
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

- name: delete_subdeployments_on_demand_service_broker
  resource_label: Delete all instances deployed by the On Demand Service Broker
  single_az_only: true
  templates:
  - name: delete-sub-deployments
    release: {{ odb_release['name'] }}
    manifest: |
      disable_ssl_cert_verification: true
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definition:
    name: instances
    type: integer
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
